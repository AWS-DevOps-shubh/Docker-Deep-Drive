________________________________________
📁 Project Structure
pgsql
CopyEdit
my-app/
├── docker-compose.yml
├── Dockerfile
├── index.js
├── package.json
________________________________________
🔧 Step 1: Dockerfile

FROM node:18

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 3000
CMD ["node", "index.js"]
________________________________________
🧾 Step 2: docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    environment:
      - DB_URL=mongodb://mongo:27017/mydb

  mongo:
    image: mongo:5
    volumes:
      - mongo_data:/data/db

volumes:
  mongo_data:
________________________________________
✅ Step 3: Run Everything Together
docker-compose up --build
🚀 Ye command 2 containers run karega:
•	app: Your Node.js application
•	mongo: A MongoDB database
________________________________________

🔎 **Breakdown of `docker-compose.yml`**

| 🧩 **Key**        | 📖 **Meaning**                                      |
|------------------|-----------------------------------------------------|
| `services`       | All the containers you want to run                  |
| `build`          | Build from local Dockerfile                         |
| `image`          | Use official/public image                           |
| `ports`          | Map local → container ports                         |
| `volumes`        | Persistent data storage                             |
| `depends_on`     | Define service start order                          |
| `environment`    | Inject environment variables into the container     |


________________________________________


📌 **Commands Cheatsheet**

| 🧪 **Command**                            | ⚙️ **Use**                                               |
|------------------------------------------|----------------------------------------------------------|
| `docker-compose up`                      | Start all services                                       |
| `docker-compose up --build`              | Build images and run                                     |
| `docker-compose down`                    | Stop and remove all containers, networks                 |
| `docker-compose logs`                    | Show container logs                                      |
| `docker-compose ps`                      | List running services                                    |
| `docker-compose exec <service> sh`       | Shell access inside container                            |



